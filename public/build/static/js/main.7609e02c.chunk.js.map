{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","email","password","form","setForm","users","setUsers","inputChange","e","target","name","value","formSubmit","a","fetch","method","body","JSON","stringify","headers","res","text","responseText","responseJSON","parse","console","log","localStorage","setItem","jwt","getUsers","getItem","json","data","className","type","onChange","onClick","border","map","u","_id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNAwGeA,EAtGH,WAEV,IAFgB,EASUC,mBAPT,CACfC,MAAO,GACPC,SAAU,KAJI,mBASRC,EATQ,KASFC,EATE,OAUYJ,mBAHV,IAPF,mBAURK,EAVQ,KAUDC,EAVC,KAYVC,EAAc,SAACC,GACnBJ,EAAQ,2BACHD,GADE,kBAEJK,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAMxBC,EAAU,uCAAG,gCAAAC,EAAA,+EAECC,MACd,qBACA,CACEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUf,GACrBgB,QAAS,CACP,eAAgB,sBARP,cAEXC,EAFW,gBAaUA,EAAIC,OAbd,OAaXC,EAbW,OAcXC,EAAeN,KAAKO,MAAMF,GAE9BG,QAAQC,IAAIH,GACZI,aAAaC,QAAQ,MAAOL,EAAaM,KAjB1B,kDAoBfJ,QAAQC,IAAI,eApBG,0DAAH,qDAwBVI,EAAQ,uCAAG,8BAAAjB,EAAA,+EAEGC,MACd,gBACA,CACEC,OAAQ,MACRI,QAAS,CACP,cAAgB,UAAhB,OAA2BQ,aAAaI,QAAQ,WAPzC,cAETX,EAFS,gBAWIA,EAAIY,OAXR,OAWTC,EAXS,OAYbR,QAAQC,IAAIO,GACZ3B,EAAS2B,GAbI,kDAebR,QAAQC,IAAR,MAfa,0DAAH,qDAmBd,MACE,CACE,sBAAKQ,UAAU,OAAf,UACE,kCACE,4CACA,uBAAOC,KAAK,OAAOzB,KAAK,QAAQC,MAAOR,EAAKF,MAAOmC,SAAU7B,OAE/D,kCACE,4CACA,uBAAO4B,KAAK,WAAWzB,KAAK,WAAWC,MAAOR,EAAKD,SAAUkC,SAAU7B,OAEzE,wBAAQ8B,QAASzB,EAAjB,uBAEF,uBACA,sBAAKsB,UAAU,OAAf,UACE,wBAAQG,QAASP,EAAjB,uBACA,uBACA,wBAAOQ,OAAO,IAAd,UACE,+BACE,uCACA,6CAGAjC,EAAMkC,KAAI,SAAAC,GACR,OACE,+BACE,6BAAKA,EAAEvC,QACP,6BAAKuC,EAAEtC,aAFAsC,EAAEC,gBC/EZC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1Bb,M","file":"static/js/main.7609e02c.chunk.js","sourcesContent":["import { useState } from 'react';\n\nconst App = () => {\n\n  const initForm = {\n    email: '',\n    password: '',\n  };\n\n  const initUsers = [];\n\n  const [ form, setForm ] = useState(initForm);\n  const [ users, setUsers ] = useState(initUsers);\n\n  const inputChange = (e) => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  let responseText = '';\n\n  const formSubmit = async () => {\n    try {\n      let res = await fetch(\n        '/api/v1/auth/login',\n        {\n          method: 'post',\n          body: JSON.stringify(form),\n          headers: {\n            'content-type': 'application/json'\n          }\n        }\n      );\n  \n      let responseText = await res.text();\n      let responseJSON = JSON.parse(responseText);\n\n      console.log(responseJSON);\n      localStorage.setItem('jwt', responseJSON.jwt);\n      \n    } catch(err) {\n      console.log('Login error');\n    }\n  };\n\n  const getUsers = async () => {\n    try {\n      let res = await fetch(\n        '/api/v1/users',\n        {\n          method: 'get',\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('jwt')}`\n          }\n        }\n      );\n      let data = await res.json();\n      console.log(data);\n      setUsers(data);\n    } catch(err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    [\n      <div className=\"form\">\n        <label>\n          <span>Username</span>\n          <input type=\"text\" name=\"email\" value={form.email} onChange={inputChange}/>\n        </label>\n        <label>\n          <span>Password</span>\n          <input type=\"password\" name=\"password\" value={form.password} onChange={inputChange}/>\n        </label>\n        <button onClick={formSubmit}>Log In</button>\n      </div>,\n      <hr/>,\n      <div className=\"data\">\n        <button onClick={getUsers}>Get Users</button>\n        <br/>\n        <table border=\"1\">\n          <tr>\n            <th>email</th>\n            <th>password</th>\n          </tr>\n          {\n            users.map(u => {\n              return (\n                <tr key={u._id}>\n                  <td>{u.email}</td>\n                  <td>{u.password}</td>\n                </tr>\n              );\n            })\n          }\n        </table>\n      </div>\n    ]\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './global.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}